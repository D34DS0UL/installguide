1 - create partitions 

1 uefi +512M type ef :primary

2 root *rest of disk' type linux :primary

3 swap +1G type 82| solaris / swap :primary

Creating filesystem for UEFI system

mkfs.fat -F32 /dev/sdax

create an Ext4 filesystem on the root partition:

mkfs.ext4 /dev/sdax

make swap 

mkswap /dev/sdax

swapon /dev/sdax

ping google.com //check etternet connection

pacman -Syy //update arch repos 

mount /dev/sdax /mnt  //rootfiles

pacstrap /mnt base linux linux-firmware nano //install base linux in de os with pacstrap

info <**  Generate a fstab file to define how disk partitions, block devices, or remote file systems are mounted into the filesystem.  **>

genfstab -U /mnt >> /mnt/etc/fstab

arch-chroot /mnt //change root directory for de terminal to the os

set basic configurations 

# ln -sf /usr/share/zoneinfo/America/New_York /etc/localtime  //set local time

# hwclock --systohc


Edit /etc/locale.gen and uncomment en_US.UTF-8 UTF-8 and other needed locales.


Create the locale.conf(5) file, and set the LANG variable accordingly:

/etc/locale.conf

LANG=en_US.UTF-8

If you set the console keyboard layout, make the changes persistent in vconsole.conf(5):

/etc/vconsole.conf

KEYMAP=de-latin1

Network configuration

Create the hostname file:

echo  myhostname >> /etc/hostname

nano /etc/hosts >>
127.0.0.1	localhost
::1		localhost
127.0.1.1	myarch

set root password 

passwd

install grub 

pacman -S grub efibootmgr

Create the directory where EFI partition will be mounted:

mkdir /boot/efi

Now, mount the ESP partition you had created

mount /dev/sda1 /boot/efi

install grub:

grub-install --target=x86_64-efi --bootloader-id=GRUB --efi-directory=/boot/efi

last step:

grub-mkconfig -o /boot/grub/grub.cfg

crate more users:

install sudo 

pacman -S sudo 

useradd -m myuser

passwd myuser

usermod -aG wheel,audio,video,storage myuser

EDITOR=nano visudo

uncoment %wheel ALL=(ALL=ALL) ALL

pacman -S xorg networkmanager sddm xf86-video-amdgpu plasma

systemctl enable NetworkManager.service 

systemctl start NetworkManager.service 

systemctl enable sddm.service 

systemctl start sddm.service 

exit

Finally, unmount the root partition using the following command:

umount /mnt

Or,

umount -l /mnt

reboot

